/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReplayTimeSlider.java
 *
 * Created on Aug 3, 2012, 10:25:15 AM
 */
package UI.Utils;

import java.awt.Color;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author TRL@SMU
 */
public class ReplayTimeSlider extends javax.swing.JPanel {

    private static final Logger MyLogger = Logger.getLogger(ReplayTimeSlider.class.getName());
    public boolean IsTimerPasued = true;
    private PlayThread PlayThread = null;
    private ImageIcon PauseIcon = null;
    private ImageIcon PlayIcon = null;
    public Hashtable<Integer, JLabel> TimeTicks = new Hashtable();
    public Hashtable<Integer, String> AllTimeTicks = new Hashtable();
    public int IntervalIndex = 0;

    /**
     * Creates new form ReplayTimeSlider
     */
    public ReplayTimeSlider() {
        PauseIcon = new javax.swing.ImageIcon(getClass().getResource("/Resources/Pause.png"));
        PlayIcon = new javax.swing.ImageIcon(getClass().getResource("/Resources/Play.png"));

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PlayPauseMainPanel = new javax.swing.JPanel();
        PlayPauseEmptyWest2 = new javax.swing.JPanel();
        PlayPauseEmptyWest = new javax.swing.JPanel();
        PlayPauseEmptyEast = new javax.swing.JPanel();
        PlayPauseEmptyNorth = new javax.swing.JPanel();
        PlayPauseEmptySouth = new javax.swing.JPanel();
        PlayPausePanel = new javax.swing.JPanel();
        playButton = new javax.swing.JButton();
        SliderPanel2 = new javax.swing.JPanel();
        TimeSlider = new javax.swing.JSlider();
        PlayPauseEmptyEast1 = new javax.swing.JPanel();
        PlayPauseEmptyWest1 = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        PlayPauseMainPanel.setBackground(new Color (0,0,0,0));
        PlayPauseMainPanel.setName("PlayPauseMainPanel"); // NOI18N
        PlayPauseMainPanel.setOpaque(false);
        PlayPauseMainPanel.setPreferredSize(new java.awt.Dimension(55, 20));
        PlayPauseMainPanel.setLayout(new java.awt.BorderLayout());

        PlayPauseEmptyWest2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PlayPauseEmptyWest2.setMaximumSize(new java.awt.Dimension(20, 20));
        PlayPauseEmptyWest2.setMinimumSize(new java.awt.Dimension(20, 20));
        PlayPauseEmptyWest2.setName("PlayPauseEmptyWest2"); // NOI18N
        PlayPauseEmptyWest2.setOpaque(false);
        PlayPauseEmptyWest2.setPreferredSize(new java.awt.Dimension(20, 20));
        PlayPauseEmptyWest2.setLayout(new java.awt.BorderLayout());

        PlayPauseEmptyWest.setForeground(java.awt.Color.white);
        PlayPauseEmptyWest.setMaximumSize(new java.awt.Dimension(20, 20));
        PlayPauseEmptyWest.setMinimumSize(new java.awt.Dimension(20, 20));
        PlayPauseEmptyWest.setName("PlayPauseEmptyWest"); // NOI18N
        PlayPauseEmptyWest.setOpaque(false);
        PlayPauseEmptyWest.setLayout(new java.awt.BorderLayout());
        PlayPauseEmptyWest2.add(PlayPauseEmptyWest, java.awt.BorderLayout.WEST);

        PlayPauseEmptyEast.setForeground(java.awt.Color.white);
        PlayPauseEmptyEast.setMaximumSize(new java.awt.Dimension(20, 20));
        PlayPauseEmptyEast.setMinimumSize(new java.awt.Dimension(20, 20));
        PlayPauseEmptyEast.setName("PlayPauseEmptyEast"); // NOI18N
        PlayPauseEmptyEast.setOpaque(false);
        PlayPauseEmptyEast.setLayout(new java.awt.BorderLayout());
        PlayPauseEmptyWest2.add(PlayPauseEmptyEast, java.awt.BorderLayout.EAST);

        PlayPauseEmptyNorth.setForeground(java.awt.Color.white);
        PlayPauseEmptyNorth.setMaximumSize(new java.awt.Dimension(20, 30));
        PlayPauseEmptyNorth.setMinimumSize(new java.awt.Dimension(20, 30));
        PlayPauseEmptyNorth.setName("PlayPauseEmptyNorth"); // NOI18N
        PlayPauseEmptyNorth.setOpaque(false);
        PlayPauseEmptyNorth.setLayout(new java.awt.BorderLayout());
        PlayPauseEmptyWest2.add(PlayPauseEmptyNorth, java.awt.BorderLayout.NORTH);

        PlayPauseEmptySouth.setForeground(java.awt.Color.white);
        PlayPauseEmptySouth.setMaximumSize(new java.awt.Dimension(20, 30));
        PlayPauseEmptySouth.setMinimumSize(new java.awt.Dimension(20, 30));
        PlayPauseEmptySouth.setName("PlayPauseEmptySouth"); // NOI18N
        PlayPauseEmptySouth.setOpaque(false);
        PlayPauseEmptySouth.setLayout(new java.awt.BorderLayout());
        PlayPauseEmptyWest2.add(PlayPauseEmptySouth, java.awt.BorderLayout.SOUTH);

        PlayPausePanel.setBackground(new Color (0,0,0,0));
        PlayPausePanel.setMaximumSize(new java.awt.Dimension(10, 10));
        PlayPausePanel.setName("PlayPausePanel"); // NOI18N
        PlayPausePanel.setOpaque(false);
        PlayPausePanel.setLayout(new java.awt.BorderLayout());

        playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Play.png"))); // NOI18N
        playButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        playButton.setIconTextGap(0);
        playButton.setMaximumSize(new java.awt.Dimension(20, 20));
        playButton.setMinimumSize(new java.awt.Dimension(30, 20));
        playButton.setName("playButton"); // NOI18N
        playButton.setOpaque(false);
        playButton.setPreferredSize(new java.awt.Dimension(30, 20));
        playButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playButtonMouseClicked(evt);
            }
        });
        PlayPausePanel.add(playButton, java.awt.BorderLayout.CENTER);
        playButton.setEnabled(false);

        PlayPauseEmptyWest2.add(PlayPausePanel, java.awt.BorderLayout.CENTER);

        PlayPauseMainPanel.add(PlayPauseEmptyWest2, java.awt.BorderLayout.CENTER);

        add(PlayPauseMainPanel, java.awt.BorderLayout.WEST);

        SliderPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        SliderPanel2.setName("SliderPanel2"); // NOI18N
        SliderPanel2.setOpaque(false);
        SliderPanel2.setLayout(new java.awt.BorderLayout());

        TimeSlider.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        TimeSlider.setForeground(new java.awt.Color(0, 0, 0));
        TimeSlider.setMajorTickSpacing(5);
        TimeSlider.setMaximum(30);
        TimeSlider.setMinorTickSpacing(1);
        TimeSlider.setPaintLabels(true);
        TimeSlider.setPaintTicks(true);
        TimeSlider.setValue(0);
        TimeSlider.setAutoscrolls(true);
        TimeSlider.setDoubleBuffered(true);
        TimeSlider.setName("TimeSlider"); // NOI18N
        TimeSlider.setOpaque(false);
        TimeSlider.setValueIsAdjusting(true);
        SliderPanel2.add(TimeSlider, java.awt.BorderLayout.CENTER);
        TimeSlider.setEnabled(false);

        PlayPauseEmptyEast1.setMaximumSize(new java.awt.Dimension(20, 20));
        PlayPauseEmptyEast1.setMinimumSize(new java.awt.Dimension(20, 20));
        PlayPauseEmptyEast1.setName("PlayPauseEmptyEast1"); // NOI18N
        PlayPauseEmptyEast1.setOpaque(false);
        PlayPauseEmptyEast1.setPreferredSize(new java.awt.Dimension(10, 20));
        PlayPauseEmptyEast1.setLayout(new java.awt.BorderLayout());
        SliderPanel2.add(PlayPauseEmptyEast1, java.awt.BorderLayout.EAST);

        PlayPauseEmptyWest1.setMaximumSize(new java.awt.Dimension(20, 20));
        PlayPauseEmptyWest1.setMinimumSize(new java.awt.Dimension(20, 20));
        PlayPauseEmptyWest1.setName("PlayPauseEmptyWest1"); // NOI18N
        PlayPauseEmptyWest1.setOpaque(false);
        PlayPauseEmptyWest1.setPreferredSize(new java.awt.Dimension(10, 20));
        PlayPauseEmptyWest1.setLayout(new java.awt.BorderLayout());
        SliderPanel2.add(PlayPauseEmptyWest1, java.awt.BorderLayout.WEST);

        add(SliderPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playButtonMouseClicked
        if (playButton.isEnabled()) {
            if (IsTimerPasued && TimeSlider.getValue() < TimeSlider.getMaximum()) {
                IsTimerPasued = false;
                playButton.setIcon(PauseIcon);
                (PlayThread = new PlayThread()).start();
            } else {
                this.IsTimerPasued = true;
                this.playButton.setIcon(PlayIcon);
            }
        }
}//GEN-LAST:event_playButtonMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PlayPauseEmptyEast;
    private javax.swing.JPanel PlayPauseEmptyEast1;
    private javax.swing.JPanel PlayPauseEmptyNorth;
    private javax.swing.JPanel PlayPauseEmptySouth;
    private javax.swing.JPanel PlayPauseEmptyWest;
    private javax.swing.JPanel PlayPauseEmptyWest1;
    private javax.swing.JPanel PlayPauseEmptyWest2;
    public javax.swing.JPanel PlayPauseMainPanel;
    private javax.swing.JPanel PlayPausePanel;
    private javax.swing.JPanel SliderPanel2;
    public javax.swing.JSlider TimeSlider;
    public javax.swing.JButton playButton;
    // End of variables declaration//GEN-END:variables


    private class PlayThread extends Thread {

        public PlayThread() {
        }

        @Override
        @SuppressWarnings("SleepWhileHoldingLock")
        public void run() {

            while (true) {
                if (TimeSlider.getValue() < TimeSlider.getMaximum() && IsTimerPasued == false) {
                    TimeSlider.setValue(TimeSlider.getValue() + 1);
                    if (TimeSlider.getValue() == TimeSlider.getMaximum()) {
                        IsTimerPasued = true;
                        playButton.setIcon(PlayIcon);
                    }
                    try {
                        PlayThread.sleep(500);
                    } catch (InterruptedException ex) {
                        MyLogger.log(Level.SEVERE, null, ex);
                    }
                } else {
                    break;
                }
            }
        }
    }
}
